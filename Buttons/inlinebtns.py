from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from db.db import Database 
import logging



db = Database()

from aiogram import types

from aiogram import types

def create_users_keyboard():
    users = db.get_all_users()  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    buttons = []
    for user in users:
        button = types.InlineKeyboardButton(
            text=f"{user[2]} {user[3]}",  # –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            callback_data=f"delete_user:{user[1]}"  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        )
        buttons.append(button)
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∞–∫—Å–∏–º—É–º 3 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
    row_width = 3
    rows = [buttons[i:i + row_width] for i in range(0, len(buttons), row_width)]
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    inline_kb = types.InlineKeyboardMarkup(inline_keyboard=rows)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫

    return inline_kb


def admin_confirmation_keyboard(user_id):
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    add_button = InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", callback_data=f"approve_{user_id}")
    cancel_button = InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"deny_{user_id}")

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [add_button, cancel_button]  # –ö–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    ])
    
    return keyboard

def ad_buttons():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üíéüïπÔ∏è COLLECT BONUS üöÄüíé", url="https://1wfqtr.life/v3/aggressive-casino?p=dnsg&sub1=1212")]
    ])
    return keyboard

def lust_chat():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üëÄ‚ú® LUSTCHAT üí´üîû", url="https://t.me/+rnK8RLgQdQsyNTZi")]
    ])
    return keyboard

def rec_button():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="JOIN US üòàüîû", url="https://t.me/+BiBsA7D6K743N2Zi")]
    ])
    return keyboard


def status_edit(text_edit, edit_status):

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏

    status_module_button = InlineKeyboardButton(text=text_edit, callback_data=f"edit_status_{edit_status}")
    link_post_button = InlineKeyboardButton(text="–í–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ", callback_data="link_post")
    caption_post = InlineKeyboardButton(text="–ü–æ—Å—Ç (–§–æ—Ç–æ+—Ç–µ–∫—Å—Ç)", callback_data="caption_post")
    text_post = InlineKeyboardButton(text="–ü–æ—Å—Ç (–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π)", callback_data="any_post")
    auto_posting = InlineKeyboardButton(text="–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ (–†—É—á–Ω–æ–π)", callback_data="auto_posting")

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [caption_post, text_post],
        [link_post_button, auto_posting]
    ])
    return keyboard

def spam_mode(text_edit, edit_status):
    status_module_button = InlineKeyboardButton(text=text_edit, callback_data=f"spam_status_{edit_status}")

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [status_module_button],  # –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
    ])
    return keyboard


def get_admin_buttons(user_id, username, message):
    try:
        logging.info(f"Creating buttons for user {user_id} with username {username}.")
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —ç–º–æ–¥–∑–∏
        buttons = [
            InlineKeyboardButton(text="üö´", callback_data=f"ban_{user_id}"),
            InlineKeyboardButton(text="üîì", callback_data=f"unban_{user_id}"),
            InlineKeyboardButton(text="‚úÖ", callback_data=f"approve_{message}_{user_id}"),
            InlineKeyboardButton(text="‚ùå", callback_data=f"reject_{user_id}_{message}"),
            InlineKeyboardButton(text="üë§", url=f"tg://user?id={user_id}")
        ]

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
        keyboard = InlineKeyboardMarkup(row_width=3, inline_keyboard=[buttons])

        logging.info("Buttons successfully created.")
        return keyboard
    except Exception as e:
        logging.error(f"Error while creating buttons: {e}")
        raise



